/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.babbler.ws.io.avro.model;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
/** Avro schema used for representing a babble on Kafka */
@org.apache.avro.specific.AvroGenerated
public class BabbleValue2 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -1008454758450041519L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"BabbleValue2\",\"namespace\":\"com.babbler.ws.io.avro.model\",\"doc\":\"Avro schema used for representing a babble on Kafka\",\"fields\":[{\"name\":\"author\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"authot of the babble\"},{\"name\":\"content\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"content of the babble\"},{\"name\":\"timestamp\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"timestamp of the babble provided by the user\"},{\"name\":\"location\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"location of the babble\"},{\"name\":\"tags\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"default\":[]},{\"name\":\"mentions\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"default\":[]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<BabbleValue2> ENCODER =
      new BinaryMessageEncoder<BabbleValue2>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<BabbleValue2> DECODER =
      new BinaryMessageDecoder<BabbleValue2>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<BabbleValue2> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<BabbleValue2> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<BabbleValue2>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this BabbleValue2 to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a BabbleValue2 from a ByteBuffer. */
  public static BabbleValue2 fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** authot of the babble */
   private java.lang.String author;
  /** content of the babble */
   private java.lang.String content;
  /** timestamp of the babble provided by the user */
   private java.lang.String timestamp;
  /** location of the babble */
   private java.lang.String location;
   private java.util.List<java.lang.String> tags;
   private java.util.List<java.lang.String> mentions;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public BabbleValue2() {}

  /**
   * All-args constructor.
   * @param author authot of the babble
   * @param content content of the babble
   * @param timestamp timestamp of the babble provided by the user
   * @param location location of the babble
   * @param tags The new value for tags
   * @param mentions The new value for mentions
   */
  public BabbleValue2(java.lang.String author, java.lang.String content, java.lang.String timestamp, java.lang.String location, java.util.List<java.lang.String> tags, java.util.List<java.lang.String> mentions) {
    this.author = author;
    this.content = content;
    this.timestamp = timestamp;
    this.location = location;
    this.tags = tags;
    this.mentions = mentions;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return author;
    case 1: return content;
    case 2: return timestamp;
    case 3: return location;
    case 4: return tags;
    case 5: return mentions;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: author = (java.lang.String)value$; break;
    case 1: content = (java.lang.String)value$; break;
    case 2: timestamp = (java.lang.String)value$; break;
    case 3: location = (java.lang.String)value$; break;
    case 4: tags = (java.util.List<java.lang.String>)value$; break;
    case 5: mentions = (java.util.List<java.lang.String>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'author' field.
   * @return authot of the babble
   */
  public java.lang.String getAuthor() {
    return author;
  }


  /**
   * Gets the value of the 'content' field.
   * @return content of the babble
   */
  public java.lang.String getContent() {
    return content;
  }


  /**
   * Gets the value of the 'timestamp' field.
   * @return timestamp of the babble provided by the user
   */
  public java.lang.String getTimestamp() {
    return timestamp;
  }


  /**
   * Gets the value of the 'location' field.
   * @return location of the babble
   */
  public java.lang.String getLocation() {
    return location;
  }


  /**
   * Gets the value of the 'tags' field.
   * @return The value of the 'tags' field.
   */
  public java.util.List<java.lang.String> getTags() {
    return tags;
  }


  /**
   * Gets the value of the 'mentions' field.
   * @return The value of the 'mentions' field.
   */
  public java.util.List<java.lang.String> getMentions() {
    return mentions;
  }


  /**
   * Creates a new BabbleValue2 RecordBuilder.
   * @return A new BabbleValue2 RecordBuilder
   */
  public static com.babbler.ws.io.avro.model.BabbleValue2.Builder newBuilder() {
    return new com.babbler.ws.io.avro.model.BabbleValue2.Builder();
  }

  /**
   * Creates a new BabbleValue2 RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new BabbleValue2 RecordBuilder
   */
  public static com.babbler.ws.io.avro.model.BabbleValue2.Builder newBuilder(com.babbler.ws.io.avro.model.BabbleValue2.Builder other) {
    return new com.babbler.ws.io.avro.model.BabbleValue2.Builder(other);
  }

  /**
   * Creates a new BabbleValue2 RecordBuilder by copying an existing BabbleValue2 instance.
   * @param other The existing instance to copy.
   * @return A new BabbleValue2 RecordBuilder
   */
  public static com.babbler.ws.io.avro.model.BabbleValue2.Builder newBuilder(com.babbler.ws.io.avro.model.BabbleValue2 other) {
    return new com.babbler.ws.io.avro.model.BabbleValue2.Builder(other);
  }

  /**
   * RecordBuilder for BabbleValue2 instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<BabbleValue2>
    implements org.apache.avro.data.RecordBuilder<BabbleValue2> {

    /** authot of the babble */
    private java.lang.String author;
    /** content of the babble */
    private java.lang.String content;
    /** timestamp of the babble provided by the user */
    private java.lang.String timestamp;
    /** location of the babble */
    private java.lang.String location;
    private java.util.List<java.lang.String> tags;
    private java.util.List<java.lang.String> mentions;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.babbler.ws.io.avro.model.BabbleValue2.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.author)) {
        this.author = data().deepCopy(fields()[0].schema(), other.author);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.content)) {
        this.content = data().deepCopy(fields()[1].schema(), other.content);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[2].schema(), other.timestamp);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.location)) {
        this.location = data().deepCopy(fields()[3].schema(), other.location);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.tags)) {
        this.tags = data().deepCopy(fields()[4].schema(), other.tags);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.mentions)) {
        this.mentions = data().deepCopy(fields()[5].schema(), other.mentions);
        fieldSetFlags()[5] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing BabbleValue2 instance
     * @param other The existing instance to copy.
     */
    private Builder(com.babbler.ws.io.avro.model.BabbleValue2 other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.author)) {
        this.author = data().deepCopy(fields()[0].schema(), other.author);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.content)) {
        this.content = data().deepCopy(fields()[1].schema(), other.content);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[2].schema(), other.timestamp);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.location)) {
        this.location = data().deepCopy(fields()[3].schema(), other.location);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.tags)) {
        this.tags = data().deepCopy(fields()[4].schema(), other.tags);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.mentions)) {
        this.mentions = data().deepCopy(fields()[5].schema(), other.mentions);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'author' field.
      * authot of the babble
      * @return The value.
      */
    public java.lang.String getAuthor() {
      return author;
    }

    /**
      * Sets the value of the 'author' field.
      * authot of the babble
      * @param value The value of 'author'.
      * @return This builder.
      */
    public com.babbler.ws.io.avro.model.BabbleValue2.Builder setAuthor(java.lang.String value) {
      validate(fields()[0], value);
      this.author = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'author' field has been set.
      * authot of the babble
      * @return True if the 'author' field has been set, false otherwise.
      */
    public boolean hasAuthor() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'author' field.
      * authot of the babble
      * @return This builder.
      */
    public com.babbler.ws.io.avro.model.BabbleValue2.Builder clearAuthor() {
      author = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'content' field.
      * content of the babble
      * @return The value.
      */
    public java.lang.String getContent() {
      return content;
    }

    /**
      * Sets the value of the 'content' field.
      * content of the babble
      * @param value The value of 'content'.
      * @return This builder.
      */
    public com.babbler.ws.io.avro.model.BabbleValue2.Builder setContent(java.lang.String value) {
      validate(fields()[1], value);
      this.content = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'content' field has been set.
      * content of the babble
      * @return True if the 'content' field has been set, false otherwise.
      */
    public boolean hasContent() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'content' field.
      * content of the babble
      * @return This builder.
      */
    public com.babbler.ws.io.avro.model.BabbleValue2.Builder clearContent() {
      content = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'timestamp' field.
      * timestamp of the babble provided by the user
      * @return The value.
      */
    public java.lang.String getTimestamp() {
      return timestamp;
    }

    /**
      * Sets the value of the 'timestamp' field.
      * timestamp of the babble provided by the user
      * @param value The value of 'timestamp'.
      * @return This builder.
      */
    public com.babbler.ws.io.avro.model.BabbleValue2.Builder setTimestamp(java.lang.String value) {
      validate(fields()[2], value);
      this.timestamp = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'timestamp' field has been set.
      * timestamp of the babble provided by the user
      * @return True if the 'timestamp' field has been set, false otherwise.
      */
    public boolean hasTimestamp() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'timestamp' field.
      * timestamp of the babble provided by the user
      * @return This builder.
      */
    public com.babbler.ws.io.avro.model.BabbleValue2.Builder clearTimestamp() {
      timestamp = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'location' field.
      * location of the babble
      * @return The value.
      */
    public java.lang.String getLocation() {
      return location;
    }

    /**
      * Sets the value of the 'location' field.
      * location of the babble
      * @param value The value of 'location'.
      * @return This builder.
      */
    public com.babbler.ws.io.avro.model.BabbleValue2.Builder setLocation(java.lang.String value) {
      validate(fields()[3], value);
      this.location = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'location' field has been set.
      * location of the babble
      * @return True if the 'location' field has been set, false otherwise.
      */
    public boolean hasLocation() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'location' field.
      * location of the babble
      * @return This builder.
      */
    public com.babbler.ws.io.avro.model.BabbleValue2.Builder clearLocation() {
      location = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'tags' field.
      * @return The value.
      */
    public java.util.List<java.lang.String> getTags() {
      return tags;
    }

    /**
      * Sets the value of the 'tags' field.
      * @param value The value of 'tags'.
      * @return This builder.
      */
    public com.babbler.ws.io.avro.model.BabbleValue2.Builder setTags(java.util.List<java.lang.String> value) {
      validate(fields()[4], value);
      this.tags = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'tags' field has been set.
      * @return True if the 'tags' field has been set, false otherwise.
      */
    public boolean hasTags() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'tags' field.
      * @return This builder.
      */
    public com.babbler.ws.io.avro.model.BabbleValue2.Builder clearTags() {
      tags = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'mentions' field.
      * @return The value.
      */
    public java.util.List<java.lang.String> getMentions() {
      return mentions;
    }

    /**
      * Sets the value of the 'mentions' field.
      * @param value The value of 'mentions'.
      * @return This builder.
      */
    public com.babbler.ws.io.avro.model.BabbleValue2.Builder setMentions(java.util.List<java.lang.String> value) {
      validate(fields()[5], value);
      this.mentions = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'mentions' field has been set.
      * @return True if the 'mentions' field has been set, false otherwise.
      */
    public boolean hasMentions() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'mentions' field.
      * @return This builder.
      */
    public com.babbler.ws.io.avro.model.BabbleValue2.Builder clearMentions() {
      mentions = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public BabbleValue2 build() {
      try {
        BabbleValue2 record = new BabbleValue2();
        record.author = fieldSetFlags()[0] ? this.author : (java.lang.String) defaultValue(fields()[0]);
        record.content = fieldSetFlags()[1] ? this.content : (java.lang.String) defaultValue(fields()[1]);
        record.timestamp = fieldSetFlags()[2] ? this.timestamp : (java.lang.String) defaultValue(fields()[2]);
        record.location = fieldSetFlags()[3] ? this.location : (java.lang.String) defaultValue(fields()[3]);
        record.tags = fieldSetFlags()[4] ? this.tags : (java.util.List<java.lang.String>) defaultValue(fields()[4]);
        record.mentions = fieldSetFlags()[5] ? this.mentions : (java.util.List<java.lang.String>) defaultValue(fields()[5]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<BabbleValue2>
    WRITER$ = (org.apache.avro.io.DatumWriter<BabbleValue2>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<BabbleValue2>
    READER$ = (org.apache.avro.io.DatumReader<BabbleValue2>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
